pipeline {
    agent any
    stages {
        stage('Get Changed Files & Run Tests') {
            steps {
                script {
                    // Fetch Data
                    sh "git fetch --all"

                    // Get the list of changed files between the base branch and the PR branch
                    def changedFiles = sh(script: "git diff --name-only origin/${env.ghprbTargetBranch} origin/${env.ghprbSourceBranch}", returnStdout: true).trim()
                    
                    echo "Changed files:\n${changedFiles}"

                    def test_effected_files = []
                    def files = changedFiles.split('\n').collect { it.trim() }
                    def testFiles = []

                    files.each { file ->
                      echo "File: ${file}"
                      // Check if the full path contains 'test'
                      if (file.contains("test")) {
                        testFiles << file
                          }
                    }
                
                    // If there are test files, join them into a single string and print
                    if (testFiles) {
                      def testChangedFiles = testFiles.join(' ')
                      echo "test_changed_files=${testChangedFiles}"
                    } else {
                      echo "No files contain 'test' in their path."
                    }
                }
            }
        }    
    }
    
    // Add post-build actions if necessary
    post {
        always {
            // Always clean the workspace regardless of the build result
            deleteDir()
        }
    }
}
