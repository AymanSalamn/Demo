pipeline {
    agent any

    environment {
        PYTEST_COMMAND = "${params.pytestCommand}"
        REPORT_DIR_NAME = "${params.resultsDirName}"
        REPORT_DIR_NAME_HTML = "${params.resultsDirName}_html"
    }
    stages {
        stage('Install Allure') {
            steps {
                script {
                    // GET current dir 
                    def current_dir = pwd()
                    sh "echo ${current_dir}"
                    sh 'wget -q -nv https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz'
                    sh "tar -zxvf allure-2.27.0.tgz -C ./"
                    sh "./allure-2.27.0/bin/allure --version"
                }
            }
        }

        stage('Run Test') {
            steps {
                script {
                    sh "${env.PYTEST_COMMAND} --alluredir=${env.REPORT_DIR_NAME}"
                }
            }
        }

        stage ('Generate Allure Report') {
            steps {
                script {
                    sh "./allure-2.27.0/bin/allure generate --clean --single-file ${env.REPORT_DIR_NAME} -o ${env.REPORT_DIR_NAME_HTML}"
                }
            }
        }


        stage ('Compress The Report Results Files'){
            steps{
                script {
                    sh "zip -r ${env.REPORT_DIR_NAME_HTML}.zip ${env.REPORT_DIR_NAME_HTML}"
                }

            }
        }

        stage ('Set Directory Name'){
            steps {
                script {
                    sh '''
                        # Set Directory name
                        DIR_NAME=$(date +%Y-%m-%d)
                        mkdir -p "$DIR_NAME"
                        cd "$DIR_NAME"
                        SUB_DIR=${env.REPORT_DIR_NAME_HTML}
                        mkdir -p "$SUB_DIR"
                        cd ..
                    '''
                }
            }
        }

        
    }
    
    // Add post-build actions if necessary
}
