pipeline {
    agent any

    environment {
        PYTEST_COMMAND = "${params.pytestCommand}"
        REPORT_DIR_NAME = "${params.resultsDirName}"
        REPORT_DIR_NAME_HTML = "${params.resultsDirName}_html"
        REPORT_RESULTS_FULL_PATH = ""
    }
    stages {
        stage('Install Allure') {
            steps {
                script {
                    // GET current dir 
                    def current_dir = pwd()
                    sh "echo ${current_dir}"
                    sh 'wget -q -nv https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz'
                    sh "tar -zxvf allure-2.27.0.tgz -C ./"
                    sh "./allure-2.27.0/bin/allure --version"
                }
            }
        }

        stage('Run Test') {
            steps {
                script {
                    sh "${env.PYTEST_COMMAND} --alluredir=${env.REPORT_DIR_NAME}"
                }
            }
        }

        stage ('Generate Allure Report') {
            steps {
                script {
                    sh "./allure-2.27.0/bin/allure generate --clean --single-file ${env.REPORT_DIR_NAME} -o ${env.REPORT_DIR_NAME_HTML}"
                }
            }
        }


        stage ('Compress The Report Results Files'){
            steps{
                script {
                    sh "zip -r ${env.REPORT_DIR_NAME_HTML}.zip ${env.REPORT_DIR_NAME_HTML}"
                }

            }
        }

        stage ('Set Directory Name'){
            steps {
                script {
                    def todayDate = new Date().format('yyyy-MM-dd')
                    def subDirName = env.REPORT_DIR_NAME_HTML ?: 'default_subdir'
                    def mainDir = todayDate
                    def subDir = "${mainDir}/${subDirName}"
                    sh "mkdir -p ${mainDir}"
                    sh "mkdir -p ${subDir}"
                }
            }
        }


        stage ('Upload Results To S3'){
            steps {
                script {
                    def AWS_S3_BUCKET = "pytest-allure-report-results"
                    def todayDate = new Date().format('yyyy-MM-dd')
                    def full_path = "${todayDate}/${env.REPORT_DIR_NAME_HTML}"
                    sh "mv ${env.REPORT_DIR_NAME_HTML}.zip ${full_path}"
                    sh "aws s3 cp ${full_path}/${env.REPORT_DIR_NAME_HTML}.zip s3://${AWS_S3_BUCKET}/${full_path}/"
                }
            }
        }
        
    }
    
    // Add post-build actions if necessary
}
